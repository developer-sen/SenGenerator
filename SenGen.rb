#!/usr/bin/ruby
#Images,Colors,storyboards,xibs,storyboard storyboardIdentifier, segue
require 'fileutils'
require 'erb'

Dir.chdir(__dir__)
project_file_name = Dir["*.xcodeproj"].first
if project_file_name.nil? then abort("Could not find .xcodeproj file.") end
target_directory = "#{File.dirname project_file_name}/#{project_file_name.split(".").first}"
asset_file_paths = Dir["#{target_directory}/**/*.xcassets"]
generated_files_directory = ARGV[0]
generated_files_directory ||= target_directory
resource_file_path = "#{generated_files_directory}/GeneratedResources.swift"

@image_assets = []
@color_assets = []

asset_file_paths.each { |file_path|
  Dir.chdir(file_path) do
    images = Dir["*.imageset"].map { |image|
      asset_name = image.split(".").first
      "static let #{asset_name.split.join "_"} = \"#{asset_name}\""
    }
    colors = Dir["*.colorset"].map { |color|
      color_name = color.split(".").first
      "static let #{color_name.split.join "_"} = \"#{color_name}\""
    }
    @image_assets = (@image_assets + images).sort
    @color_assets = (@color_assets + colors).sort
  end
}

r_file_template = <<-SWIFT_TEMPLATE
//  This file was automatically generated by resources generator and should not be edited.

import Foundation
import UIKit

final class R {
\tfinal class image {
<%- @image_assets.each do |image|-%>
\t\t<%=image%>
<%- end -%>
\t}
\tfinal class color {
<%- @color_assets.each do |color|-%>
\t\t<%=color%>
<%- end -%>
\t}
}
SWIFT_TEMPLATE

unless Dir.exist? generated_files_directory
  FileUtils.mkdir_p generated_files_directory
end

parser = ERB.new(r_file_template,nil,'-')
file_content = parser.result
File.new(resource_file_path,"w") << file_content
puts "R file Created"
